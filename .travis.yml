## travis ci

#include:
os: linux

dist: trusty

sudo: required

compiler: gcc

group: stable

family: unix

language: python

env:
   #- ARCH=x86
   #- ARCH=x64
   - ARCH=arm
   - ARCH=aarm64

python:
  #- 2.6
  #- 2.7
  #- 3.2
  #- 3.3
  #- 3.4
  #- 3.5
  #- 3.6
  #- 3.7
  - 3.8
  - 3.9
  - nightly
  #- pypy
  - pypy3

before_cache: -r -f $HOME/.cache/pip/log/debug.log

language: c
 cache: - ccache -pip

  pip: true
  #-timeout: 1

  env:
    matrix:
    - DEFCONFIG=bcm2709_defconfig ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf-
    - DEFCONFIG=bcm2711_defconfig ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf-
    - DEFCONFIG=bcm2711_defconfig ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu-
    - DEFCONFIG=bcm2835_defconfig ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf-

  directories:
   - .autoconf
   - $HOME/.m2
   - $HOME/.cache
   - $HOME/.pyenv
     bundler: true

#git-branches
branches:
 only:
  - master
 # - alpha
 # - c++

## command to install dependencies
before_install:
  #- sudo apt-get update && upgrade

  ## for virtualisation/simulation of linux/raspberry pi but hardware gpios not possible!
  #- sudo apt-get install qemu-system-arm wget xz-utils sshpass
  ## ARM- architecture needed !
  #- install-dependencies-arm.sh

install:
 # - sudo apt-get install git
 # - key
 # - pip install
 # -r requirements.txt
 # --user # param if no sudo/root-access
 # - sudo apt-get install gcc
 # - sudo python setup.py install

 - sudo pip install RPi.GPIO
 # - sudo apt-get install python-rpi.gpio
 # - sudo pip install python-rpi.gpio

 # - git clone https://github.com/polaco1782/raspberry-qemu.git
 # - wget "https://super-secret-location.com/2015-11-21-raspbian-jessie-lite.img.xz"
 # - unxz "2015-11-21-raspbian-jessie-lite.img.xz"

 # - virtualenv ./nodeps
 # - ./nodeps/bin/python setup.py install
 # - curl-config --version; pip freeze
 # - git clone git@github.com:polaco1782/raspberry-qemu.git


notifications:
  email: false
    #on_success: change
    #on_failure: always

# command to run tests +scripts
before_script:
 - git clone git://github.com/wodowiesel/PiFunk --single branch lite
 # - qemu-system-arm -kernel raspberry-qemu/kernel-qemu -cpu arm1176 -m 256 -M versatilepb -no-reboot -serial stdio -append "root=/dev/sda2 panic=1 rootfstype=ext4 rw" -net user,hostfwd=tcp::10022-:22 -net nic -display none -hda 2015-11-21-raspbian-jessie-lite.img
 # - before-script-linux.sh
 # fast_finish: true

script:
 #- key
 - nosetests
 - coveralls
 # - sshpass -p raspberry ssh localhost -o StrictHostKeyChecking=no -p 10022 -l pi "cat /etc/os-release"
 - ./ci/travis/pifunklite-shell.sh
 - ./ci/travis/install-dep.sh

#compiling with gcc here
 - sudo make clean
 - sudo gcc -std=gnu99 -v -ggdb3 -g3 -O3 -pg -Wall -Iinclude -I/opt/vc/include -Llib -L/opt/vc/lib/ -L/usr/src/lib/ -lgcc -lbcm_host -lbcm2835 -lsndfile -lm -lpthread -D_USE_MATH_DEFINES -D_GNU_SOURCE -march=armv6 -mtune=arm1176jzf-s -mfloat-abi=hard -mfpu=vfp -ffast-math -DRASPI1 --save-temps -o bin/pifunklite
 - sudo make
 - sudo make install

#run programm
 #- cd PiFunk
 - sudo ./pifunklite -n sound.wav -f 26.9650 -s 22050 -m fm -t a -b 12.5 -p 7 -g 7 -d 14 -l 0
 #- sudo python pifunklite.py

##script-plugins if needed
 # - sudo python pifunk-temp.py
 # - sudo python pifunk-cpu-ram-disk.py

after_script:

 # before_deploy: ./before-deploy-linux.sh

deploy:
  # provider: releases
   # api_key:
    # secure: token-key
  # file: dist/*.py
  # file_glob: true
  # on:
    # repo: wodowiesel/PiFunk
    # tags: true
  # skip_cleanup: true

 after_failure:
 #

 after_success:
 # - coveralls
 # - coverage combine
 # - codecov
